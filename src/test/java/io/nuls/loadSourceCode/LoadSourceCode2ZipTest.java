/**
 * MIT License
 * <p>
 * Copyright (c) 2017-2018 nuls.io
 * <p>
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * <p>
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * <p>
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package io.nuls.loadSourceCode;

import org.apache.commons.io.IOUtils;
import org.junit.Test;

import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.Base64;

/**
 * @author: PierreLuo
 * @date: 2020-03-03
 */
public class LoadSourceCode2ZipTest {

    @Test
    public void test() {
        OutputStream out = null;
        try {
            String fileDataURL = "fileHeader,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";
            String[] arr = fileDataURL.split(",");
            String headerInfo = arr[0];
            String body = arr[1];
            byte[] fileContent = Base64.getDecoder().decode(body);
            File zipFile = new File("/Users/pierreluo/IdeaProjects/contract-validation-server/src/test/resources/bbai_token.zip");
            out = new FileOutputStream(zipFile);
            IOUtils.write(fileContent, out);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            IOUtils.closeQuietly(out);
        }
    }
}
